<template>
  <div v-if="isAuthenticated !== null">
    <div v-if="isAuthenticated">
      <div class="container">
        <div class="row">
          <div class="col-12 mt-5">
            <div class="card">
              <p v-if="user" class="card-text">Witaj, {{ user.data.name }}!</p>
              <div class="card-header">
                <h3>Twoje Dane</h3>
              </div>
              <div class="card-body">
                <!-- Tabela z danymi użytkownika -->
                <table class="table table-bordered" v-if="user">
                  <thead class="table-dark">
                  <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Login</th>
                    <th scope="col">Email</th>
                  </tr>
                  </thead>
                  <tbody>
                  <tr v-if="user">
                    <td>{{ user.data.id }}</td>
                    <td>{{ user.data.name }}</td>
                    <td>{{ user.data.email }}</td>
                  </tr>
                  </tbody>
                </table>
                <p v-if="user" class="card-text">Liczba twoich punktów to: {{ user.data.points_total }}!</p>
              </div>
            </div>

            <!-- Tabela z nagrodami -->
            <div class="card mt-4" v-if="suggestions && suggestions.length > 0">
              <div class="card-header">
                <h3>Twoje Nagrody</h3>
              </div>
              <div class="card-body">
                <table class="table table-bordered">
                  <thead class="table-dark">
                  <tr>
                    <th scope="col">ID Zgłoszenia</th>
                    <th scope="col">Cena sugerowana</th>
                    <th scope="col">Ścieżka zdjęcia</th>
                    <th scope="col">Data</th>
                    <th scope="col">Status zatwierdzenia</th>
                  </tr>
                  </thead>
                  <tbody>
                  <tr v-for="suggestion in suggestions" :key="suggestion.id">
                    <td>{{ suggestion.id }}</td>
                    <td>{{ suggestion.suggested_price }}</td>
                    <td>{{ suggestion.photo_path }}</td>
                    <td>{{ suggestion.price_date }}</td>
                    <td>{{ suggestion.approved ? 'Zatwierdzone' : 'Oczekuje' }}</td>
                  </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div v-else>
      <p>Proszę się zalogować, aby zobaczyć swoje dane.</p>
    </div>
  </div>
</template>

<script>
import axios from "axios";

export default {
  data() {
    return {
      user: null, // Dane użytkownika
      suggestions: [], // Nagrody użytkownika
    };
  },

  computed: {
    // Sprawdzenie, czy użytkownik jest zalogowany
    isAuthenticated() {
      return this.$store.state.isAuthenticated;
    },
  },

  mounted() {
    if (this.isAuthenticated === null) {
      this.$store.dispatch('checkUserAuthenticationStatus');  // Wywołanie akcji sprawdzającej status logowania
    }
    this.getUserDetails(); // Pobranie danych użytkownika
  },

  methods: {
    // Funkcja do pobierania danych użytkownika
    getUserDetails() {
      axios.get('http://localhost:8000/api/userprofile', {
        headers: {
          Authorization: `Bearer ${localStorage.getItem('token')}`, // Dodanie tokenu autoryzacji
        }
      })
          .then(response => {
            this.user = response.data; // Zapisanie danych użytkownika
            console.log('User details:', this.user);
            this.fetchSuggestions(); // Po załadowaniu użytkownika, pobierz jego sugestie
          })
          .catch(error => {
            console.error("Błąd pobierania danych użytkownika:", error);
          });
    },

    // Funkcja do pobierania nagród użytkownika
    fetchSuggestions() {
      if (this.user && this.user.data.id) {
        const userId = this.user.data.id; // Pobranie ID użytkownika
        console.log('userId:', userId);
        axios.get(`http://localhost:8000/api/fuel-price-suggestions/user/${userId}`, {
          headers: {
            Authorization: `Bearer ${localStorage.getItem('token')}`, // Dodanie tokenu autoryzacji
          }
        })
            .then((response) => {
              console.log("Sugestie użytkownika:", response.data);
              this.suggestions = response.data; // Zapisanie sugestii
            })
            .catch((error) => {
              console.error("Błąd pobierania sugestii użytkownika:", error);
            });
      }
    },
  },
};
</script>